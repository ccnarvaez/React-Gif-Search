{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAKcA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE5B,EAAsCC,mBAAS,gBAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KAeA,OACI,sBAAOC,SAVU,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,QAAU,IAC7BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAe,MAKnB,SAEI,uBACIO,KAAM,OACNC,MAAUT,EACVU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCRlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAWH,GADxF,sBAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAIFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAXxB,kBAeZM,GAfY,4CAAH,sDCDPO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGtC,OACI,sBAAKc,UAAY,yCAAjB,UACI,qBAAKC,IAAOf,EAAMgB,IAAQN,IAC1B,kCAAKA,EAAL,WCDCO,EAAU,SAAC,GAAmB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHuB,SAAEA,GACzB,MAA4Bd,mBAAS,CACjCqB,KAAK,GACLa,SAAS,IAFb,mBAAQC,EAAR,KAAeC,EAAf,KAiBA,OAZAC,qBAAW,WACPxB,EAASC,GACRwB,MAAM,SAAAC,GAECH,EAAU,CACNf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IACEqB,EDfmBK,CAAc1B,GAAhCO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAEd,OACA,qCACI,mCAAOpB,EAAP,OAEEoB,GAAW,qBAAKJ,UAAY,6CAAjB,0BACb,qBAAKA,UAAY,aAAjB,SAEST,EAAKE,KAAK,SAACC,GAAD,OAEH,cAAC,EAAD,CAA8BE,MAAUF,EAAIE,MAAQV,IAAQQ,EAAIR,KAA3CQ,EAAIC,aEZnCgB,EAAe,WAG1B,MAAmCzC,mBAAU,CAAE,gBAA/C,mBAAM0C,EAAN,KAAkB3C,EAAlB,KAIC,OACI,gCACI,qDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,6BACM2C,EAAWnB,KAAM,SAAAT,GACf,OACI,cAAC,EAAD,CACIA,SAAaA,GACLA,Y,MClBpC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.779aa19d.chunk.js","sourcesContent":["import React,  { useState } from \"react\";\r\nimport propTypes from 'prop-types';\r\n\r\n\r\n\r\nexport const  AddCategory = ( { setCategories } ) => {\r\n\r\n    const [ inputValue, setInputValue ] = useState('hello world!');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length >= 1){\r\n            setCategories(cats => [inputValue,...cats ])\r\n            setInputValue ('');\r\n        }\r\n        \r\n    }\r\n    return(\r\n        < form onSubmit = { handleSubmit}>\r\n            \r\n            <input \r\n                type= \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=xqWUnq6VicV6iOocGvLk0JK1OFX5NY3s&q=${ encodeURI( category )}&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    \r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","export const GifGridItem = ( { id, title, url } ) =>{\r\n\r\n    \r\n    return(\r\n        <div className = \"card animate__animated animate__bounce\">\r\n            <img src= { url } alt = { title }></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\n\r\nexport const GifGrid = ( { category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category );\r\n    \r\n    return(\r\n    <>\r\n        <h1> { category } </h1>\r\n\r\n        { loading && <div className = \"card animate__animated animate__rubberBand\"> Cargando...</div>}\r\n        <div className = \" card-grid\">\r\n          \r\n                {data.map( (img ) => (\r\n                        \r\n                        <GifGridItem key = { img.id } title = { img.title } url = { img.url } />\r\n                    )\r\n                )}   \r\n         \r\n        </div>\r\n    </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs= ( category ) => {\r\n    const [ state, setState ] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n        .then( imgs => {\r\n           \r\n                setState( {\r\n                    data: imgs, \r\n                    loading: false\r\n                });\r\n          \r\n        });\r\n\r\n    }, [ category ]);\r\n    return state;\r\n\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\n\r\n export const GifExpertApp = () => {\r\n\r\n   \r\n   let [ categories, setCategories] = useState( [ 'Sailor Moon'] );\r\n \r\n  \r\n\r\n    return(\r\n        <div>\r\n            <h1> Buscador de gifs! </h1>\r\n            <AddCategory setCategories = { setCategories }  />\r\n            <hr />\r\n    \r\n            <ol>\r\n                { categories.map(  category => {\r\n                    return(\r\n                        <GifGrid \r\n                            category = { category } \r\n                            key = { category }\r\n                        />\r\n                    )\r\n                })}\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './components/GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}